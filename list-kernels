#!/bin/bash

export LC_ALL=C
export GREP_COLORS="mt=01;32"
set -eu +f -o pipefail
shopt -s extglob
rroot=/mnt/space/mirror
skip="5.1|c[678].*|c9[fm]1|c9m2|c9f1|p[5678]|.*armh"
skip="5.1|c[678].*|fm]1|c9m[12]|c9f1|p[5678]|.*armh"

if [ -t 1 ]; then
   RED=$'\e[1;31m'
  NORM=$'\e[m'
else
   RED=
  NORM=
fi

package=kernel-image
branch=Sisyphus arch=x86_64 flavour=std-def
branches= flavours= arches=
all_arch=
unset logs configs grep_mode query rpmpeek include
unset aptcachecmd
for i; do
	shift
	[ "$i" = sisyphus ] && i=Sisyphus
	[ "$i" = s ] && i=Sisyphus
	[ "$i" = def ] && flavours+=" std-def un-def rt +([[:digit:]]).+([[:digit:]])"
	if [ "$i" = c ]; then
		i=$(set +f; cd /ALT; ls -d c*)
	fi
	if [ -d "/ALT/$i" ]; then
		branch=$i
		branches+=" $i"
		continue
	fi
	if [ -d "/ALT/$branch/files/$i" ]; then
		arch=$i
		arches+=" $i"
		continue
	fi
	case $i in
		std-def|std-debug|std-pae|un-def|rt|kvm|std-kvm|xenomai|centos|ovz-el|ovz-el7|mp|+([[:digit:]]).+([[:digit:]]))
			flavours+=" $i"
			continue
			;;
	esac
	if ls "/ALT/$branch/files/*/RPMS/$package-$i-[1-9]*.rpm" &>/dev/null; then
		flavour=$i
		flavours+=" $i"
		continue
	fi
	case "$i" in
		--package=*) package="${i#*=}" ;;
		--config*) configs= ;;
		--grep=*)  configs="${i#*=}" ;;
		--grep)    configs=; grep_mode=y; break ;;
		--no-cache) export NO_CACHE=y ;;
		-a | --all-arch*) all_arch=y ;;
		--log*) logs=y ;;
		--changelog | --configfiles | --conflicts | --docfiles | --dump | --enhances \
		| --filesbypkg | --info | --last | --obsoletes | --provides \
		| --recommends | --requires | --suggests | --supplements | --scripts \
		| --state | --triggers | --triggerscripts | --lastchange | --list \
		| --qf=* | --queryformat=*)
			query=$i ;;
		--peek) rpmpeek=y; break ;;
		--checkinstall) include=checkinstall ;;
		--debuginfo) include=debuginfo ;;
		--other) include='*' ;;
		--whatdepends |	--depends | --showpkg | --showsrc | --show | --policy | --pkgnames)
		       	aptcachecmd=${i#--} ;;
		-*) echo "No option $i"; exit 1 ;;
	esac
done

[ -z "${branches-}" ] && branches=$(cd $rroot; dirname */noarch | grep -E -vwe "$skip")
: ${flavours:=*}
[ -z "$arches" ] && arches=$arch

# echo "branches: $branches"
# echo "flavours: $flavours"

set -f
list=
for b in $branches; do
	for f in $flavours; do
		if [ -n "$all_arch" ]; then
			arches=$(ls $rroot/$b/files/ | grep -v -e - -e SRPMS -e list)
		fi
		for a in $arches; do
			r=$rroot/$b/files/$a/RPMS
			test -d $r || continue
			pat=$r/$package-$f${include+"-$include"}-[0-9]*-alt*.$a.rpm
			set +f
			for i in $pat; do
				test -e $i || continue
				flv=${i##*"$package"-}
				flv=${flv%%-[0-9]*}
				[ ! -v include ] && [[ $flv =~ debuginfo|domU|checkinstall ]] && continue
				list+=" $i"
			done
			set -f
		done
	done
done
if [ -v configs ]; then
	if [ -n "$configs" ]; then
		set -- -e "$configs"
		grep_mode=y
	fi

	trap "kill $$" INT
	list=$(echo $list | tr ' ' '\n' | sort)
	for i in $list; do
		prefix=${i##*mirror/}
		branch=${prefix%%/files/*}
		prefix=$package-${prefix##*"$package"-}
		prefix=${prefix%.rpm}
		if [ -v grep_mode ]; then
			if ! kernel-config $i | sed "s,^,$branch/$prefix:," | grep -P --color=auto -i "$@"; then
				echo "$branch/$prefix:${RED}no match${NORM}"
			fi
		else
			kernel-config $i | sed "s,^,$branch/$prefix:,"
		fi
	done
	exit
fi
if [ -v rpmpeek ]; then
	list=$(echo $list | tr ' ' '\n' | sort)
	for rpm in $list; do
		( set -x; rpmpeek "$rpm" "$@" )
	done
	exit
fi
if [ -v query ]; then
	list=$(echo $list | tr ' ' '\n' | sort)
	for rpm in $list; do
		bn=$(basename "$rpm")
		rpm -qp "$rpm" $query | sed "s/^/$bn\t/"
	done
	exit
fi
if [ -v logs ]; then
	list=$(echo $list | tr ' ' '\n' | sort)
	# https://git.altlinux.org/tasks/309028/build/100/x86_64/log
	for rpm in $list; do
		DISTTAG=$(rpm -qp --qf "%{DISTTAG}" "$rpm")
		try=${DISTTAG#*+}
		task=${try%%.*}
		subtask=${try#"$task".}
		subtask=${subtask%%.*}
		{
			echo : $i task=$task subtask=$subtask arch=$arch
			curl -sS -L -f "https://git.altlinux.org/tasks/$task/build/$subtask/$arch/log"
		} | less -K || exit
	done
	exit
fi
if [ -v aptcachecmd ]; then
	list=$(echo $list | tr ' ' '\n' | sort)
	sep=
	for rpm in $list; do
		echo -n "$sep"
		bn=$(basename "$rpm")
		DISTTAG=$(rpm -qp --qf "%{DISTTAG}" "$rpm")
		EVR=$(rpm -qp --qf "%{EVR}" "$rpm")
		PKG="${bn%-*-*}#$EVR:$DISTTAG"
		# Unable to determine `@UNIXTIME` from the RPM
		pkgname=$(apt-cache pkgnames "$PKG")
		if [ -n "$pkgname" ]; then
			# Also skip noisy lines with pkgnames (for whatdepends).
			(set -x; apt-cache "$aptcachecmd" "$pkgname") | grep -Ev '^\s{6}'
		else
			echo >&2 "Package $PKG not found in apt-cache."
		fi
		sep=$'\n'
	done
	exit
fi
if [ -t 1 ]; then
	HIGHLIGHT=$'sed -E s!/([Ss]isyphus)/!/\e[1;33m\\1\e[m/!'
else
	HIGHLIGHT=cat
fi

ls -ltrd -- $list \
	| sed -E 's/^\S+\s+\S+\s+\S+\s+\S+//' \
	| $HIGHLIGHT \
	| grep -E --color '^|[0-9.]+-alt[^.]+'

