#!/bin/bash
# shellcheck disable=SC2086
set -efu

force=
edit=
tig=
log=
logopt=
bugs=
for opt do
        shift
        case "$opt" in
                --force | -f) force=-f ;;
		--edit) edit=y ;;
		--tig) tig=y ;;
		--log) log=y ;;
		--close) unset bugs ;;
		--close=*) bugs=${opt##*=} ;;
		-p) logopt+=" $opt" ;;
		-*) echo >&2 "Unknown option: $opt"; exit 1 ;;
                *) set -- "$@" "$opt";;
        esac
done

GREEN=$'\e[1;32m'
YELLOW=$'\e[1;33m'
MAGENTA=$'\e[1;35m'
NORM=$'\e[m'

V() { echo -e "+ $YELLOW$*$NORM" >&2; "$@"; }

changelogize() {
	for s; do
		echo "- $s." | fmt -t | sed -E 's/^[[:space:]]+/  /'
	done
}

ref=$(git notes get-ref)
if [ -n "$tig" ]; then
	tig "$ref" "$@"
	exit
elif [ -n "$log" ]; then
	git log $logopt "$ref" "$@"
	exit
fi
if [ $# -eq 0 ]; then
	echo >&2 "${MAGENTA}Nothing done, specify commit id to add a note, for example '@'.${NORM}"
	exit 1
fi

for commit; do
	subject=$(git log --format=%s -n1 "$commit")
	if [ ! -v bugs ]; then
		bugs=$(git log --format='%(trailers:key=link)' -n1 "$commit" |
			grep -Po 'https://bugzilla.altlinux.org/\K\d+' |
			tail -1)
	fi
	for i in ${bugs-}; do
		subject+=" (ALT#$i)"
	done
	note=$(changelogize "$subject")
	if [ -n "$edit" ]; then
		git notes edit "$commit"
		continue
	fi
	if git notes list "$commit" &>/dev/null; then
		oldnote=$(git notes show "$commit")
		if [ "$note" = "$oldnote" ]; then
			echo >&2 "${YELLOW}Note already set the same for '$commit': $note${NORM}"
			continue
		elif [ -z "$force" ]; then
			echo >&2 "${MAGENTA}Already other note on commit '$commit', --force to override.${NORM}"
			echo >&2"- $oldnote"
			echo >&2"+ $note"
			continue
		fi
	fi
	git notes add $force -m "$note" "$commit"
	echo "${GREEN}$commit: $note${NORM}"
done
