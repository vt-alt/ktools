#!/bin/bash
set -eu +o posix
shopt -s extglob

grepcmd='grep'
selector='fzf --highlight-line'
unset mode offset
for opt do
        shift
        case "$opt" in
		-+([0-9])) offset=${opt#-} ;;
		--grep|-ug|--ug|--ugrep|-rg|--rg) grepcmd=${opt##+(-)} ;&
		-g) mode=GREP; break ;;
		--sk | --skim) selector='sk' ;;
		--) break ;;
		-*) echo >&2 "Error: unknown option: $opt"; exit 1 ;;
                *) set -- "$@" "$opt";;
        esac
done
toplevel=$(git rev-parse --show-toplevel)
logdir="$toplevel/.git/bb"
[ -d "$logdir" ] && cd "$logdir"

mapfile -t files < <(ls -1tr "log"*)

if [ -v mode ]; then
	for o; do [[ $o = -l ]] && mode=LIST; done
	if [[ $mode == LIST ]]; then
		mapfile -t files < <(grep "$@" "${files[@]}")
	else
		$grepcmd --color=auto "$@" "${files[@]}"
		exit
	fi
fi

if [ -v offset ]; then
	# Start from 1 like in tail -1 is the last line.
	files=($(ls -1tr "${files[@]}" | tac | sed -n "${offset}p"))
else
	# shellcheck disable=SC2012,SC2207,SC2016
	files=($(ls -1tr "${files[@]}" |
		$selector \
		--bind='q:abort,/:unbind(q)+unbind(/)' \
		--no-mouse \
		--no-sort \
		--tac \
		--multi \
		--preview-window=80% \
		--preview='head -$((LINES/2-1)) {}; echo ...; tail -$((LINES/2)) {}'))
fi
if [ ${#files[@]} -eq 0 ]; then
	exit
elif [ ${#files[@]} -eq 1 ]; then
	# To show the filename in prompt.
	less "${files[@]}"
else
	# This may be used to grep selected logs.
	head -n-0 "${files[@]}" | less
fi
