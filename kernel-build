#!/bin/bash -efu

V() { echo -e "+ \e[1;33m$@\e[m" >&2; "$@"; }

unset commit shared kernelbot task
force=
kmodules=y
for opt do
	shift
	case "$opt" in
		--kernelbot) kernelbot=y ;;
		-f | --force) force="-f" ;;
		--task=*) task="${opt#*=}" ;;
		--commit) commit=y kernelbot=y ;;
		--share*) shared=y ;;
		--branch=*) branch="${opt#*=}" ;;
		--no-kmodules) unset kmodules ;;
		*) set -- "$opt" "$@"; break ;;
	esac
done

if [ -v kernelbot ]; then
	remote=kernelbot
	repo=/people/kernelbot/packages/kernel-image
	approver=girarbot
else
	remote=gitery
	repo=kernel-image
	approver=girar
fi
br=$(git branch --show-current)
[ -n "${branch-}" ] || branch=${br#*/}
case $branch in
	sisyphus | [cp][1-9]* | icarus* ) ;;
	*) echo >&2 "Invalid repo $branch"; exit 1 ;;
esac
brflvr=${br%/*}
case $brflvr in
	un-def|std-def|std-pae|std-debug|next) ;;
	*) echo >&2 "Invalid flavour $brflvr"; exit 1 ;;
esac

# Set tags to build.
if [ "$*" ]; then
	set "$@"
else
	set -- $(git tag --points-at @)
fi
V git push $remote $br $force
for tag; do
	flavour=${tag#kernel-image-}
	flavour=${flavour%-*-alt*}

	V git push $remote $tag $force
	[ -v task ] || task=$(V ssh girar task new $branch)
	V ssh girar task add $task repo $repo $tag
	[ -v shared ] && V ssh girar task share $task enable
	if [ -v kmodules ] && V ssh girar task add $task kmodules $flavour; then
		msg="-m kmodules:$tag"
	else
		msg=
	fi
	echo PESIGN | V ssh $approver task approve $task all
	V ssh girar task run --fail-late ${commit+--commit} $task $msg
done

