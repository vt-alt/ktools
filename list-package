#!/bin/bash
# shellcheck disable=SC2010,SC2155,SC2207,SC2012

export GREP_COLORS="mt=01;32"
set -eu +f
rroot=/ALT
skip="5.1|c[678].*|fm]1|c9m[12]|c9f1|p[567]|.*armh"

branch=Sisyphus arch=x86_64
branches='' arches='' packages=''
all_arch='' lsopts='-ltrd' rpmpeek='' lesser='' logs='' dts='' show_task=''
pattern='' query=''
for i; do
	[ "$i" = s ]        && i=Sisyphus
	[ "$i" = sisyphus ] && i=Sisyphus
	if [ -d "/ALT/$i" ]; then
		branch=$i
		branches+=" $i"
		continue
	fi
	if [ -d "/ALT/$branch/files/$i" ]; then
		arch=$i
		arches+=" $i"
		continue
	fi
	case "$i" in
		-a|--all-arch*) all_arch=y ;;
		--full-time) lsopts+=" $i" ;;
		-1|--names) lsopts= ;;
		--peek|--rpmpeek) rpmpeek=y; lsopts= ;;
		--less) lesser=y; lsopts= ;;
		--log*) logs=y ;;
		--dts | --ver*) dts=y ;;
		--task) show_task=y ;;
		--ls) query=-l ;;
		--changelog | --configfiles | --conflicts | --docfiles | --dump | --enhances \
		| --filesbypkg | --info | --last | --obsoletes | --provides \
		| --recommends | --requires | --suggests | --supplements | --scripts \
		| --state | --triggers | --triggerscripts | --lastchange | --list \
		| --qf=* | --queryformat=*)
			query=$i ;;
		--ls=* | --list=*) query=-l; pattern=${i#*=} ;;
		--grep=*)
			# --grep= also provides 'no match' message.
			pattern=${i#*=} ;;
		-*) echo "No option $i"; exit 1 ;;
		*) packages+=" $i" ;;
	esac
done

[ -z "${branches-}" ] && branches=$(cd $rroot; ls | grep -E -vwe "$skip" | sort -fu)
: "${flavours:=*}"
[ -z "$arches" ] && arches="$arch noarch"

gear_describe()
{
	local tag descr=$(gear --describe 2>&1)
	if [ "$descr" = "gear: specsubst directive requires a tag" ]; then
		tag=$(git describe --abbrev=0 --tags --exclude '*debug*')
		descr=$(gear --describe -t "$tag")
	fi
	# shellcheck disable=SC2086
	set -- $descr
	NAME=$1
	VERSION=$2
	RELEASE=$3
	export NAME VERSION RELEASE
}
if [ -z "$packages" ]; then
	gear_describe
	packages=$NAME
fi

# List package in all branches.
set -f
list=()
for package in $packages; do
	for b in $branches; do
		if [ -n "$all_arch" ]; then
			arches=$(ls "$rroot/$b/files/" | grep -v -e - -e SRPMS -e list)
		fi
		for a in $arches; do
			r=$rroot/$b/files/$a/RPMS
			test -d "$r" || continue
			pat="$r/$package-[0-9]*-alt*.$a.rpm"
			set +f
			for i in $pat; do
				test -e "$i" || continue
				list+=("$i")
			done
			set -f
		done
	done
done
[ ${#list[@]} -gt 0 ] || { echo "No match for '$packages'"; exit 1; }

# Package cache. Try to be mediocrely safe with deletion.
tmp=${TMPDIR:-/tmp}/.list-package
mkdir -p "$tmp"
find "$tmp" -maxdepth 3 -fstype tmpfs -name '*.rpm*' -ctime +1 -delete

grab_dts() {
	DISTTAG=$(rpm -qp "$RPM" --qf '%{DISTTAG}')
	IFS=+. read -r REPO TASK SUBTASK _ <<< "$DISTTAG"
	SOURCERPM=$(rpm -qp "$RPM" --qf '%{SOURCERPM}')
	pkgname=${SOURCERPM%-*-*.*.rpm}
	DTS_URL="http://ftp.altlinux.org/pub/distributions/archive/$REPO/index/src/${pkgname:0:1}/$pkgname/d-t-s-evr.list"
	DTS_LIST=$(curl -sS -L -f "$DTS_URL" | awk 'OFS="\t" {$1=strftime("%Y-%m-%d",$1); print $0}')
	DTS=$DTS_LIST
}

# Download RPM form URL into cache.
cache_rpm() {
	local rpm=$1
	local tmpd=$tmp/$TASK/$SUBTASK
	mkdir -p "$tmpd"
	RPM="$tmpd/$rpm" # output
	if [ ! -e "$RPM" ]; then
		URL+=$rpm
		echo >&2 "$URL"
		curl "$URL" -o "$RPM-"
		mv "$RPM-" "$RPM"
	fi
	# Also changes ctime, to make file fesh for the cache.
	touch -a "$RPM"
}

# Select one from 'list' (from all branches) and from dts list.
select_one() {
	if [ ${#list[@]} -eq 0 ]; then
		echo >&2 "No match!"
		exit 1
	elif [ ${#list[@]} -eq 1 ]; then
		# No choice.
		# shellcheck disable=SC2128
		RPM=$list
	else
		local default=$(ls -1 "${list[@]}" | grep -i -m1 '/sisyphus/')
		RPM=$(gum choose --header='Select one:' --cursor='-> ' --selected="$default" "${list[@]}")
	fi
	if [ -n "$dts" ]; then
		grab_dts
		export GUM_CHOOSE_SELECTED=$(printf %s "$DTS" | grep -w "$TASK")
		DTS=$(printf %s "$DTS" | gum choose)
		read -r _ TASK SUBTASK _ <<< "$DTS"
		[ "${1-}" = --task ] && return
		# Download requested RPM into cache.
		URL=https://git.altlinux.org/tasks/archive/done/_$((TASK/1024))/$TASK/build/$SUBTASK/$arch/rpms/
		st_rpms=$(curl -s "$URL" | sed -En 's/<[^>]*>//gp' | grep -Eo '^[[:space:]][^[:space:]/]+.rpm\b')
		if [ "$(printf %s "$st_rpms" | grep -c .)" -gt 1 ]; then
			choice=$(printf %s "$st_rpms" | gum choose) 
		else
			choice=$st_rpms
		fi
		choice=$(printf %s "$choice" | awk '{print$1}')
		cache_rpm "$choice"
	fi
}


if [ -n "$rpmpeek" ]; then
	select_one
	prompt=" \[\033[1;36m\]$RPM\[\033[m\]> "
	rpmpeek -n "$RPM" bash --rcfile <(cat ~/.bashrc; echo PS1="\"$prompt\"")
	exit
elif [ -n "$lesser" ]; then
	select_one
	echo >&2 "+ less $RPM"
	echo
	less "$RPM"
	exit
elif [ -n "$logs" ]; then
	select_one --task
	{
		if [ -z "${TASK-}" ]; then
			DISTTAG=$(rpm -qp "$RPM" --qf '%{DISTTAG}')
			IFS=+. read -r REPO TASK SUBTASK _ <<< "$DISTTAG"
		fi
		url="https://git.altlinux.org/tasks/$TASK/build/$SUBTASK/$arch/log"
		echo >&2 "+ curl $url"
		echo
		curl -sS -L -f "$url"
	} |& less
	exit
elif [ -n "$show_task" ]; then
	select_one --task
	if [ -z "${TASK-}" ]; then
		DISTTAG=$(rpm -qp "$RPM" --qf '%{DISTTAG}')
		IFS=+. read -r REPO TASK SUBTASK _ <<< "$DISTTAG"
	fi
	(set -x; ssh girar task show --brief "$TASK")
	exit
elif [ -n "$query" ]; then
	list=( $(printf "%s\n" "${list[@]}" | sort -V) )
	for rpm in "${list[@]}"; do
		prefix=$(basename "$rpm")
		repo=${rpm%%/files/*}
		repo=${repo##*/}
		prefix=$repo/$prefix
		rpm -qp "$query" -- "$rpm" |
		if ! sed "s,^,$prefix: ," | grep --color=auto "$pattern"; then
			echo "$prefix: no match"
		fi
	done
	exit
elif [ -n "$dts" ]; then
	# Last resort - just print d-t-s-evr.list
	dts='' select_one
	grab_dts
	printf '%s\n%s' "- $DTS_URL" "$DTS_LIST" |& less
	exit
fi
if [ -t 1 ]; then
	HIGHLIGHT=$'sed -E s!/([Ss]isyphus)/!/\e[1;33m\\1\e[m/!'
else
	HIGHLIGHT='cat'
fi
# shellcheck disable=SC2086
ls $lsopts -- "${list[@]}" \
	| sed -E 's/^\S+\s+\S+\s+\S+\s+\S+//' \
	| $HIGHLIGHT \
	| grep -P --color '^|[^-]+-alt[^-]+(?=\.[^.]+(\.src)?\.s?rpm)'

